package weatherpony.partial.launch;

import java.util.Map;

import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.Metadata;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;

@Mod(modid = "pml", name = "Partial Modification Loader", 
		version = (""+PMLActualTweak.PML_majorVersion+'.'+PMLActualTweak.PML_minorVersion),
		canBeDeactivated = false)
public class PML_FMLMod {
	@Instance("pml")
	public static PML_FMLMod instance;
	@Metadata("pml")
	public static ModMetadata meta;
	@EventHandler
	public void preInit(FMLPreInitializationEvent event){
		fillMetadata();
		assertInBranding();
	}
	private void fillMetadata(){
		meta.authorList.add("The_WeatherPony");
		meta.autogenerated = false;
		meta.description = "Partial Modification Loader is a plugin-based, scripting-inspired mod system, focused on extreme compatibility. It becomes more powerful when other mods and mod systems edit code, unlike traditional Minecraft APIs which develop incompatibilities.";
		meta.credits = "Made possible by everyone that contributed";
		//meta.version = ""+PMLActualTweak.PML_majorVersion+'.'+PMLActualTweak.PML_minorVersion;
		
	}
	private void assertInBranding(){//TODO - figure out how to bypass Forge's stuff, while maintaining compatibility with everything else.
		/*Map<String,String> FMLBranding = Loader.instance().getFMLBrandingProperties();
		String fmlbranding = "";
		if(FMLBranding.containsKey("fmlbranding")){
			fmlbranding = FMLBranding.get("fmlbranding");
			fmlbranding += ", ";
		}
		fmlbranding +="PML";
		FMLBranding.put("fmlbranding", fmlbranding);*/
	}
}
